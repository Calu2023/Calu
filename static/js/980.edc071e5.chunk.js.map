{"version":3,"file":"static/js/980.edc071e5.chunk.js","mappings":"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","sources":["Components/OurServices/OurServices.jsx"],"sourcesContent":["import Slider from '../Slider/Slider';\r\nimport './OurServices.css';\r\nimport CardOur from './Card_OurService/Card_our';\r\nimport { Suspense, useState } from 'react';\r\nimport { doc, getDoc, collection, getDocs, query } from 'firebase/firestore';\r\nimport { useEffect } from 'react';\r\nimport { db } from '../../firebase-config';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst OurServices = () => {\r\n  const [ourServicesinfo, setOurServicesinfo] = useState([]);\r\n  /// TEXTOS\r\n  useEffect(() => {\r\n    const getOurServices = async () => {\r\n      const OurDoc = doc(db, 'home', 'OurServices');\r\n      const docSnapshot = await getDoc(OurDoc);\r\n      if (docSnapshot.exists()) {\r\n        setOurServicesinfo(docSnapshot.data());\r\n      }\r\n    };\r\n    getOurServices();\r\n  }, []);\r\n  ///// GET SERVICIOS\r\n  const [services, setServices] = useState([]);\r\n\r\n  const getServices = async () => {\r\n    const results = await getDocs(query(collection(db, 'servicios')));\r\n    return results;\r\n  };\r\n  useEffect(() => {\r\n    getServicesData();\r\n  }, []);\r\n\r\n  const getServicesData = async () => {\r\n    const service = await getServices();\r\n\r\n    setServices(service.docs);\r\n  };\r\n  ////////////////////////\r\n  return (\r\n    <Suspense>\r\n      <div className='ourServices'>\r\n        <div className='ourServices_text'>\r\n          <div className='edit'>\r\n            <h1 className='title-first-nuestros-servicios'>{ourServicesinfo.title}</h1>\r\n          </div>\r\n\r\n          <div className='edit'>\r\n            <p className='text-description'>{ourServicesinfo.t1}</p>\r\n          </div>\r\n        </div>\r\n        <div className='ctn-servicios'>\r\n          <div className='slider'>\r\n            <Slider>\r\n              {services &&\r\n                services.map((services, index) => (\r\n                  <CardOur\r\n                    key={index}\r\n                    image={\r\n                      <img\r\n                        className='icono-servicios'\r\n                        src={services.data().img}\r\n                        alt='icono llave'\r\n                      />\r\n                    }\r\n                    title={services.data().title}\r\n                    des={services.data().sub}\r\n                    btn={\r\n                      <Link\r\n                        onClick={() => {\r\n                          window.scroll({\r\n                            top: 0,\r\n                          });\r\n                        }}\r\n                        className='button_portfolio'\r\n                        to={`/services?serviceName=${services.data().title}`}\r\n                      >\r\n                        Ver m√°s\r\n                      </Link>\r\n                    }\r\n                  ></CardOur>\r\n                ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\nexport default OurServices;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","ourServicesinfo","setOurServicesinfo","useEffect","getOurServices","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","OurDoc","docSnapshot","wrap","_context","prev","next","doc","db","getDoc","sent","exists","data","stop","apply","arguments","_useState3","_useState4","services","setServices","getServices","_ref2","_callee2","results","_context2","getDocs","query","collection","abrupt","getServicesData","_ref3","_callee3","service","_context3","docs","_jsx","Suspense","children","_jsxs","className","title","t1","Slider","map","index","CardOur","image","src","img","alt","des","sub","btn","Link","onClick","window","scroll","top","to","concat"],"sourceRoot":""}